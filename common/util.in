#! /bin/bash

# Copyright (c) 2017, University of Kaiserslautern
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER
# OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Author: Ã‰der F. Zulian

source defaults.in

function abort {
	echo -e -n "\n\033[31mAborting.\n"; exit
}

function cmdtest {
	hash $@ 2>/dev/null || { echo >&2 "\"$@\" could not be found. Please install it and try again."; abort; }
}

function rctest {
	cmdline="$@"
	cmd="${cmdline%% *}"
	cmdtest $cmd
	"$@"
	local status=$?
	if [ $status -ne 0 ]; then
		echo -e -n "\n\033[31mError executing \"$@\".\n" >&2; echo -en "\e[0m"; abort;
	fi
	return $status
}

function archdetect {
	arch=$(uname -m | sed 's/x86_//;s/i[3-6]86/32/')
	hash notify-send 2> /dev/null
	if [[ $? -eq 0 ]]; then
		notify-send "Architecture is ${arch}-bit"
	fi
	echo -e "Architecture is ${arch}-bit"
}

function chessit {
	nr=1
	nc=80
	echo ""
	for (( r = 0; r < $nr; r++ ))
	do
		for (( c = 0 ; c < $nc; c++ ))
		do
			local sqrs=`expr $r + $c`
			local odd=`expr $sqrs % 2`
			if [ $odd -eq 0 ]; then
				echo -e -n "\033[47m "
			else
				echo -e -n "\033[40m "
			fi
		done
		echo -e -n "\033[40m" && echo ""
	done
}

function greetings {
	chessit
	echo ""
	archdetect
	rctest date
	if [ "$EUID" -ne 0 ]; then
		msg="Greetings $USER!"
		hash cowsay 2> /dev/null
		if [[ $? -eq 0 ]]; then
			cmd="cowsay -f tux $msg"
			rctest $cmd
		else
			echo -e "$msg"
		fi
	fi
	echo ""
	echo -e -n "You're currently on $HOSTNAME" && echo ""
	echo -e -n "Your home folder is $HOME" && echo ""
	echo -e -n "The current directory is $PWD" && echo ""
	echo ""
}

function checkprivledges {
	if [ "$EUID" -ne 0 ]; then
		msg="Superuser priviledges are needed in order to perform\
		some operations"
		echo -e -n $msg && echo ""
		echo "Please run as root"
		exit
	fi
}

function wgetintodir {
	cmdtest wget
	declare -a argarray=("${!1}")
	for e in "${argarray[@]}"; do
		c="mkdir -p ${e%%:*}"
		rctest $c
		wget -N ${e#*:} -P ${e%%:*}
	done
}

function hgcloneintodir {
	cmdtest hg
	declare -a argarray=("${!1}")
	for e in "${argarray[@]}"; do
		c="mkdir -p ${e%%,*}"
		rctest $c
		cd ${e%%,*}
		hg clone ${e#*,}
		echo -e -n "${e#*,} cloned into ${e%%,*}" && echo ""
	done
}

function gitcloneintodir {
	cmdtest git
	declare -a argarray=("${!1}")
	for e in "${argarray[@]}"; do
		c="mkdir -p ${e%%:*}"
		rctest $c
		cd ${e%%:*}
		git clone --recursive ${e#*:}
		echo -e -n "${e#*:} cloned into ${e%%:*}" && echo ""
	done
}

function getnumprocs {
	local __retvar=$1;
	local __nprocs=$(cat /proc/cpuinfo | grep processor | wc -l)
	if [[ "$__retvar" ]]; then
		eval $__retvar="'$__nprocs'"
	else
		echo "$__nprocs"
	fi
}

build_gem5() {
	arch=$1
	mode=$2
	target="build/$arch/gem5.$mode"
	cd $ROOTDIR/gem5
	getnumprocs np
	njobs=`expr $np - 1`
	scons $target -j$njobs
	if [[ -e $target ]]; then
		echo -e -n "\nTarget successfully built\n\n"
		file $target
		echo ""
	fi
}

build_libgem5() {
	arch=$1
	mode=$2
	target="build/$arch/libgem5_$mode.so"
	cd $ROOTDIR/gem5
	getnumprocs np
	njobs=`expr $np - 1`
	buildopts="--with-cxx-config --without-python --without-tcmalloc"
	scons $buildopts $target -j$njobs
	if [[ -e $target ]]; then
		echo -e -n "\nTarget successfully built\n\n"
		file $target
		echo ""
	fi
}
